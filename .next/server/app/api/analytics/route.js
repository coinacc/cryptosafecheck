"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/analytics/route";
exports.ids = ["app/api/analytics/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.js&appDir=%2Fhome%2Fabu%2FCascadeProjects%2Fscamapp%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fabu%2FCascadeProjects%2Fscamapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.js&appDir=%2Fhome%2Fabu%2FCascadeProjects%2Fscamapp%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fabu%2FCascadeProjects%2Fscamapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_abu_CascadeProjects_scamapp_app_api_analytics_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/analytics/route.js */ \"(rsc)/./app/api/analytics/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/analytics/route\",\n        pathname: \"/api/analytics\",\n        filename: \"route\",\n        bundlePath: \"app/api/analytics/route\"\n    },\n    resolvedPagePath: \"/home/abu/CascadeProjects/scamapp/app/api/analytics/route.js\",\n    nextConfigOutput,\n    userland: _home_abu_CascadeProjects_scamapp_app_api_analytics_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/analytics/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbmFseXRpY3MlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFuYWx5dGljcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFuYWx5dGljcyUyRnJvdXRlLmpzJmFwcERpcj0lMkZob21lJTJGYWJ1JTJGQ2FzY2FkZVByb2plY3RzJTJGc2NhbWFwcCUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGaG9tZSUyRmFidSUyRkNhc2NhZGVQcm9qZWN0cyUyRnNjYW1hcHAmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDWTtBQUN6RjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL2NyeXB0by1zY2FtLWRldGVjdG9yLz8xNzU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9ob21lL2FidS9DYXNjYWRlUHJvamVjdHMvc2NhbWFwcC9hcHAvYXBpL2FuYWx5dGljcy9yb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYW5hbHl0aWNzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYW5hbHl0aWNzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hbmFseXRpY3Mvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvaG9tZS9hYnUvQ2FzY2FkZVByb2plY3RzL3NjYW1hcHAvYXBwL2FwaS9hbmFseXRpY3Mvcm91dGUuanNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYW5hbHl0aWNzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.js&appDir=%2Fhome%2Fabu%2FCascadeProjects%2Fscamapp%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fabu%2FCascadeProjects%2Fscamapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/analytics/route.js":
/*!************************************!*\
  !*** ./app/api/analytics/route.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_analytics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/analytics */ \"(rsc)/./app/lib/analytics.js\");\n\n\n// Password for analytics access (you should change this!)\nconst ANALYTICS_PASSWORD = process.env.ANALYTICS_PASSWORD || \"admin123\";\nasync function POST(request) {\n    try {\n        const { password } = await request.json();\n        if (password !== ANALYTICS_PASSWORD) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Invalid password\"\n            }, {\n                status: 401\n            });\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true\n        });\n    } catch (error) {\n        console.error(\"Analytics auth error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Authentication failed\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        // Check if authenticated (in a real app, you'd use proper session management)\n        const authHeader = request.headers.get(\"authorization\");\n        const { searchParams } = new URL(request.url);\n        const days = parseInt(searchParams.get(\"days\")) || 30;\n        // For simplicity, we'll skip auth check for GET requests\n        // In production, implement proper session management\n        const analytics = await (0,_lib_analytics__WEBPACK_IMPORTED_MODULE_1__.getAnalytics)(days);\n        if (!analytics) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to fetch analytics\"\n            }, {\n                status: 500\n            });\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(analytics);\n    } catch (error) {\n        console.error(\"Analytics fetch error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to fetch analytics\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2FuYWx5dGljcy9yb3V0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJDO0FBQ1E7QUFFbkQsMERBQTBEO0FBQzFELE1BQU1FLHFCQUFxQkMsUUFBUUMsR0FBRyxDQUFDRixrQkFBa0IsSUFBSTtBQUV0RCxlQUFlRyxLQUFLQyxPQUFPO0lBQ2hDLElBQUk7UUFDRixNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHLE1BQU1ELFFBQVFFLElBQUk7UUFFdkMsSUFBSUQsYUFBYUwsb0JBQW9CO1lBQ25DLE9BQU9GLGtGQUFZQSxDQUFDUSxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBbUIsR0FBRztnQkFBRUMsUUFBUTtZQUFJO1FBQ3hFO1FBRUEsT0FBT1Ysa0ZBQVlBLENBQUNRLElBQUksQ0FBQztZQUFFRyxTQUFTO1FBQUs7SUFDM0MsRUFBRSxPQUFPRixPQUFPO1FBQ2RHLFFBQVFILEtBQUssQ0FBQyx5QkFBeUJBO1FBQ3ZDLE9BQU9ULGtGQUFZQSxDQUFDUSxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUF3QixHQUFHO1lBQUVDLFFBQVE7UUFBSTtJQUM3RTtBQUNGO0FBRU8sZUFBZUcsSUFBSVAsT0FBTztJQUMvQixJQUFJO1FBQ0YsOEVBQThFO1FBQzlFLE1BQU1RLGFBQWFSLFFBQVFTLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO1FBQ3ZDLE1BQU0sRUFBRUMsWUFBWSxFQUFFLEdBQUcsSUFBSUMsSUFBSVosUUFBUWEsR0FBRztRQUM1QyxNQUFNQyxPQUFPQyxTQUFTSixhQUFhRCxHQUFHLENBQUMsWUFBWTtRQUVuRCx5REFBeUQ7UUFDekQscURBQXFEO1FBRXJELE1BQU1NLFlBQVksTUFBTXJCLDREQUFZQSxDQUFDbUI7UUFFckMsSUFBSSxDQUFDRSxXQUFXO1lBQ2QsT0FBT3RCLGtGQUFZQSxDQUFDUSxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBNEIsR0FBRztnQkFBRUMsUUFBUTtZQUFJO1FBQ2pGO1FBRUEsT0FBT1Ysa0ZBQVlBLENBQUNRLElBQUksQ0FBQ2M7SUFDM0IsRUFBRSxPQUFPYixPQUFPO1FBQ2RHLFFBQVFILEtBQUssQ0FBQywwQkFBMEJBO1FBQ3hDLE9BQU9ULGtGQUFZQSxDQUFDUSxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUE0QixHQUFHO1lBQUVDLFFBQVE7UUFBSTtJQUNqRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3J5cHRvLXNjYW0tZGV0ZWN0b3IvLi9hcHAvYXBpL2FuYWx5dGljcy9yb3V0ZS5qcz85OTkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGdldEFuYWx5dGljcyB9IGZyb20gJy4uLy4uL2xpYi9hbmFseXRpY3MnO1xuXG4vLyBQYXNzd29yZCBmb3IgYW5hbHl0aWNzIGFjY2VzcyAoeW91IHNob3VsZCBjaGFuZ2UgdGhpcyEpXG5jb25zdCBBTkFMWVRJQ1NfUEFTU1dPUkQgPSBwcm9jZXNzLmVudi5BTkFMWVRJQ1NfUEFTU1dPUkQgfHwgJ2FkbWluMTIzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgcGFzc3dvcmQgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIFxuICAgIGlmIChwYXNzd29yZCAhPT0gQU5BTFlUSUNTX1BBU1NXT1JEKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogJ0ludmFsaWQgcGFzc3dvcmQnIH0sIHsgc3RhdHVzOiA0MDEgfSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IHRydWUgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQW5hbHl0aWNzIGF1dGggZXJyb3I6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnQXV0aGVudGljYXRpb24gZmFpbGVkJyB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIENoZWNrIGlmIGF1dGhlbnRpY2F0ZWQgKGluIGEgcmVhbCBhcHAsIHlvdSdkIHVzZSBwcm9wZXIgc2Vzc2lvbiBtYW5hZ2VtZW50KVxuICAgIGNvbnN0IGF1dGhIZWFkZXIgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCdhdXRob3JpemF0aW9uJyk7XG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICAgIGNvbnN0IGRheXMgPSBwYXJzZUludChzZWFyY2hQYXJhbXMuZ2V0KCdkYXlzJykpIHx8IDMwO1xuICAgIFxuICAgIC8vIEZvciBzaW1wbGljaXR5LCB3ZSdsbCBza2lwIGF1dGggY2hlY2sgZm9yIEdFVCByZXF1ZXN0c1xuICAgIC8vIEluIHByb2R1Y3Rpb24sIGltcGxlbWVudCBwcm9wZXIgc2Vzc2lvbiBtYW5hZ2VtZW50XG4gICAgXG4gICAgY29uc3QgYW5hbHl0aWNzID0gYXdhaXQgZ2V0QW5hbHl0aWNzKGRheXMpO1xuICAgIFxuICAgIGlmICghYW5hbHl0aWNzKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBhbmFseXRpY3MnIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihhbmFseXRpY3MpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0FuYWx5dGljcyBmZXRjaCBlcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdGYWlsZWQgdG8gZmV0Y2ggYW5hbHl0aWNzJyB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiZ2V0QW5hbHl0aWNzIiwiQU5BTFlUSUNTX1BBU1NXT1JEIiwicHJvY2VzcyIsImVudiIsIlBPU1QiLCJyZXF1ZXN0IiwicGFzc3dvcmQiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJzdWNjZXNzIiwiY29uc29sZSIsIkdFVCIsImF1dGhIZWFkZXIiLCJoZWFkZXJzIiwiZ2V0Iiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwiZGF5cyIsInBhcnNlSW50IiwiYW5hbHl0aWNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/analytics/route.js\n");

/***/ }),

/***/ "(rsc)/./app/lib/analytics.js":
/*!******************************!*\
  !*** ./app/lib/analytics.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAnalytics: () => (/* binding */ getAnalytics),\n/* harmony export */   getRealTimeStats: () => (/* binding */ getRealTimeStats),\n/* harmony export */   trackApiUsage: () => (/* binding */ trackApiUsage)\n/* harmony export */ });\n/* harmony import */ var _vercel_kv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vercel/kv */ \"(rsc)/./node_modules/@vercel/kv/dist/index.js\");\n\n// Track API usage with real costs from AI\nasync function trackApiUsage(data) {\n    try {\n        const timestamp = new Date().toISOString();\n        const usageRecord = {\n            timestamp,\n            project: data.project || \"unknown\",\n            model: data.model || \"gemini-2.5-flash-lite-preview-06-17\",\n            inputTokens: data.inputTokens || 0,\n            outputTokens: data.outputTokens || 0,\n            totalTokens: (data.inputTokens || 0) + (data.outputTokens || 0),\n            responseTime: data.responseTime || 0,\n            cost: data.realCostUSD || null,\n            costSource: data.realCostUSD ? \"ai_provided\" : \"not_provided\",\n            cached: data.cached || false,\n            success: data.success !== false,\n            error: data.error || null,\n            userAgent: data.userAgent || null,\n            ip: data.ip || null,\n            scanType: data.scanType || \"full\"\n        };\n        // Store in KV with a unique key\n        const key = `analytics:${timestamp}:${Math.random().toString(36).substr(2, 9)}`;\n        await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.set(key, usageRecord, {\n            ex: 60 * 60 * 24 * 30\n        }); // Keep for 30 days\n        // Also update daily summary\n        const today = new Date().toISOString().split(\"T\")[0];\n        const dailyKey = `daily:${today}`;\n        const existingDaily = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.get(dailyKey) || {\n            date: today,\n            totalRequests: 0,\n            totalTokens: 0,\n            totalCost: 0,\n            cachedRequests: 0,\n            errors: 0,\n            avgResponseTime: 0,\n            basicScans: 0,\n            fullScans: 0\n        };\n        existingDaily.totalRequests += 1;\n        existingDaily.totalTokens += usageRecord.totalTokens;\n        existingDaily.totalCost += usageRecord.cost || 0; // Handle null costs\n        if (usageRecord.cached) existingDaily.cachedRequests += 1;\n        if (!usageRecord.success) existingDaily.errors += 1;\n        if (usageRecord.scanType === \"basic\") existingDaily.basicScans += 1;\n        if (usageRecord.scanType === \"full\") existingDaily.fullScans += 1;\n        existingDaily.avgResponseTime = (existingDaily.avgResponseTime * (existingDaily.totalRequests - 1) + usageRecord.responseTime) / existingDaily.totalRequests;\n        await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.set(dailyKey, existingDaily, {\n            ex: 60 * 60 * 24 * 90\n        }); // Keep daily summaries for 90 days\n        console.log(\"Analytics tracked:\", usageRecord);\n    } catch (error) {\n        console.error(\"Failed to track analytics:\", error);\n    }\n}\n// Note: Cost calculation removed - now using real costs provided directly by AI\n// If AI doesn't provide cost data, we show \"not provided\" in analytics\n// Get analytics data for dashboard\nasync function getAnalytics(days = 30) {\n    try {\n        const endDate = new Date();\n        const startDate = new Date();\n        startDate.setDate(startDate.getDate() - days);\n        // Get daily summaries\n        const dailyData = [];\n        for(let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)){\n            const dateStr = d.toISOString().split(\"T\")[0];\n            const dailyKey = `daily:${dateStr}`;\n            const data = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.get(dailyKey);\n            if (data) {\n                dailyData.push(data);\n            }\n        }\n        // Get recent individual requests\n        const keys = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.keys(\"analytics:*\");\n        const recentKeys = keys.sort((a, b)=>b.localeCompare(a)).slice(0, 100); // Get last 100 requests\n        const recentRequests = [];\n        for (const key of recentKeys){\n            const data = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.get(key);\n            if (data) {\n                recentRequests.push(data);\n            }\n        }\n        // Calculate totals\n        const totals = dailyData.reduce((acc, day)=>({\n                totalRequests: acc.totalRequests + day.totalRequests,\n                totalTokens: acc.totalTokens + day.totalTokens,\n                totalCost: acc.totalCost + day.totalCost,\n                cachedRequests: acc.cachedRequests + day.cachedRequests,\n                errors: acc.errors + day.errors\n            }), {\n            totalRequests: 0,\n            totalTokens: 0,\n            totalCost: 0,\n            cachedRequests: 0,\n            errors: 0\n        });\n        return {\n            dailyData,\n            recentRequests,\n            totals,\n            period: {\n                startDate: startDate.toISOString().split(\"T\")[0],\n                endDate: endDate.toISOString().split(\"T\")[0],\n                days\n            }\n        };\n    } catch (error) {\n        console.error(\"Failed to get analytics:\", error);\n        return null;\n    }\n}\n// Get real-time stats - now uses the same data source as main analytics for consistency\nasync function getRealTimeStats() {\n    try {\n        const today = new Date().toISOString().split(\"T\")[0];\n        const defaultStats = {\n            totalRequests: 0,\n            totalTokens: 0,\n            totalCost: 0,\n            cachedRequests: 0,\n            errors: 0,\n            avgResponseTime: 0\n        };\n        let todayStats = defaultStats;\n        // First, try to get today's data directly from daily summary\n        const dailyKey = `daily:${today}`;\n        const todayData = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.get(dailyKey);\n        if (todayData) {\n            todayStats = todayData;\n        } else {\n            // If no daily summary exists, calculate from recent requests\n            const keys = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.keys(\"analytics:*\");\n            const recentKeys = keys.sort((a, b)=>b.localeCompare(a)).slice(0, 100); // Get last 100 requests\n            const recentRequests = [];\n            for (const key of recentKeys){\n                const data = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.get(key);\n                if (data) {\n                    recentRequests.push(data);\n                }\n            }\n            // Count requests from today\n            const todayRequests = recentRequests.filter((req)=>{\n                const reqDate = new Date(req.timestamp).toISOString().split(\"T\")[0];\n                return reqDate === today;\n            });\n            if (todayRequests.length > 0) {\n                todayStats = {\n                    totalRequests: todayRequests.length,\n                    totalTokens: todayRequests.reduce((sum, req)=>sum + (req.totalTokens || 0), 0),\n                    totalCost: todayRequests.reduce((sum, req)=>sum + (req.cost || 0), 0),\n                    cachedRequests: todayRequests.filter((req)=>req.cached).length,\n                    errors: todayRequests.filter((req)=>!req.success).length,\n                    avgResponseTime: todayRequests.length > 0 ? todayRequests.reduce((sum, req)=>sum + (req.responseTime || 0), 0) / todayRequests.length : 0\n                };\n            }\n        }\n        // Calculate last hour activity from recent requests\n        let lastHourRequests = 0;\n        const keys = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.keys(\"analytics:*\");\n        const recentKeys = keys.sort((a, b)=>b.localeCompare(a)).slice(0, 100);\n        const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString();\n        for (const key of recentKeys){\n            const data = await _vercel_kv__WEBPACK_IMPORTED_MODULE_0__.kv.get(key);\n            if (data && data.timestamp > oneHourAgo) {\n                lastHourRequests++;\n            }\n        }\n        return {\n            today: todayStats,\n            lastHour: lastHourRequests,\n            cacheHitRate: todayStats.totalRequests > 0 ? (todayStats.cachedRequests / todayStats.totalRequests * 100).toFixed(1) : 0,\n            errorRate: todayStats.totalRequests > 0 ? (todayStats.errors / todayStats.totalRequests * 100).toFixed(1) : 0\n        };\n    } catch (error) {\n        console.error(\"Failed to get real-time stats:\", error);\n        return {\n            today: {\n                totalRequests: 0,\n                totalTokens: 0,\n                totalCost: 0,\n                cachedRequests: 0,\n                errors: 0,\n                avgResponseTime: 0\n            },\n            lastHour: 0,\n            cacheHitRate: 0,\n            errorRate: 0\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFVO1lBQ1ZDLGNBQWM7WUFDZEUsV0FBVztRQUNiO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NyeXB0by1zY2FtLWRldGVjdG9yLy4vYXBwL2xpYi9hbmFseXRpY3MuanM/MTAzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBrdiB9IGZyb20gJ0B2ZXJjZWwva3YnO1xuXG4vLyBUcmFjayBBUEkgdXNhZ2Ugd2l0aCByZWFsIGNvc3RzIGZyb20gQUlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB0cmFja0FwaVVzYWdlKGRhdGEpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG4gICAgY29uc3QgdXNhZ2VSZWNvcmQgPSB7XG4gICAgICB0aW1lc3RhbXAsXG4gICAgICBwcm9qZWN0OiBkYXRhLnByb2plY3QgfHwgJ3Vua25vd24nLFxuICAgICAgbW9kZWw6IGRhdGEubW9kZWwgfHwgJ2dlbWluaS0yLjUtZmxhc2gtbGl0ZS1wcmV2aWV3LTA2LTE3JyxcbiAgICAgIGlucHV0VG9rZW5zOiBkYXRhLmlucHV0VG9rZW5zIHx8IDAsXG4gICAgICBvdXRwdXRUb2tlbnM6IGRhdGEub3V0cHV0VG9rZW5zIHx8IDAsXG4gICAgICB0b3RhbFRva2VuczogKGRhdGEuaW5wdXRUb2tlbnMgfHwgMCkgKyAoZGF0YS5vdXRwdXRUb2tlbnMgfHwgMCksXG4gICAgICByZXNwb25zZVRpbWU6IGRhdGEucmVzcG9uc2VUaW1lIHx8IDAsXG4gICAgICBjb3N0OiBkYXRhLnJlYWxDb3N0VVNEIHx8IG51bGwsIC8vIFVzZSByZWFsIGNvc3QgZnJvbSBBSSwgb3IgbnVsbCBpZiBub3QgcHJvdmlkZWRcbiAgICAgIGNvc3RTb3VyY2U6IGRhdGEucmVhbENvc3RVU0QgPyAnYWlfcHJvdmlkZWQnIDogJ25vdF9wcm92aWRlZCcsXG4gICAgICBjYWNoZWQ6IGRhdGEuY2FjaGVkIHx8IGZhbHNlLFxuICAgICAgc3VjY2VzczogZGF0YS5zdWNjZXNzICE9PSBmYWxzZSxcbiAgICAgIGVycm9yOiBkYXRhLmVycm9yIHx8IG51bGwsXG4gICAgICB1c2VyQWdlbnQ6IGRhdGEudXNlckFnZW50IHx8IG51bGwsXG4gICAgICBpcDogZGF0YS5pcCB8fCBudWxsLFxuICAgICAgc2NhblR5cGU6IGRhdGEuc2NhblR5cGUgfHwgJ2Z1bGwnXG4gICAgfTtcblxuICAgIC8vIFN0b3JlIGluIEtWIHdpdGggYSB1bmlxdWUga2V5XG4gICAgY29uc3Qga2V5ID0gYGFuYWx5dGljczoke3RpbWVzdGFtcH06JHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YDtcbiAgICBhd2FpdCBrdi5zZXQoa2V5LCB1c2FnZVJlY29yZCwgeyBleDogNjAgKiA2MCAqIDI0ICogMzAgfSk7IC8vIEtlZXAgZm9yIDMwIGRheXNcblxuICAgIC8vIEFsc28gdXBkYXRlIGRhaWx5IHN1bW1hcnlcbiAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdO1xuICAgIGNvbnN0IGRhaWx5S2V5ID0gYGRhaWx5OiR7dG9kYXl9YDtcblxuICAgIGNvbnN0IGV4aXN0aW5nRGFpbHkgPSBhd2FpdCBrdi5nZXQoZGFpbHlLZXkpIHx8IHtcbiAgICAgIGRhdGU6IHRvZGF5LFxuICAgICAgdG90YWxSZXF1ZXN0czogMCxcbiAgICAgIHRvdGFsVG9rZW5zOiAwLFxuICAgICAgdG90YWxDb3N0OiAwLFxuICAgICAgY2FjaGVkUmVxdWVzdHM6IDAsXG4gICAgICBlcnJvcnM6IDAsXG4gICAgICBhdmdSZXNwb25zZVRpbWU6IDAsXG4gICAgICBiYXNpY1NjYW5zOiAwLFxuICAgICAgZnVsbFNjYW5zOiAwXG4gICAgfTtcblxuICAgIGV4aXN0aW5nRGFpbHkudG90YWxSZXF1ZXN0cyArPSAxO1xuICAgIGV4aXN0aW5nRGFpbHkudG90YWxUb2tlbnMgKz0gdXNhZ2VSZWNvcmQudG90YWxUb2tlbnM7XG4gICAgZXhpc3RpbmdEYWlseS50b3RhbENvc3QgKz0gdXNhZ2VSZWNvcmQuY29zdCB8fCAwOyAvLyBIYW5kbGUgbnVsbCBjb3N0c1xuICAgIGlmICh1c2FnZVJlY29yZC5jYWNoZWQpIGV4aXN0aW5nRGFpbHkuY2FjaGVkUmVxdWVzdHMgKz0gMTtcbiAgICBpZiAoIXVzYWdlUmVjb3JkLnN1Y2Nlc3MpIGV4aXN0aW5nRGFpbHkuZXJyb3JzICs9IDE7XG4gICAgaWYgKHVzYWdlUmVjb3JkLnNjYW5UeXBlID09PSAnYmFzaWMnKSBleGlzdGluZ0RhaWx5LmJhc2ljU2NhbnMgKz0gMTtcbiAgICBpZiAodXNhZ2VSZWNvcmQuc2NhblR5cGUgPT09ICdmdWxsJykgZXhpc3RpbmdEYWlseS5mdWxsU2NhbnMgKz0gMTtcbiAgICBleGlzdGluZ0RhaWx5LmF2Z1Jlc3BvbnNlVGltZSA9ICgoZXhpc3RpbmdEYWlseS5hdmdSZXNwb25zZVRpbWUgKiAoZXhpc3RpbmdEYWlseS50b3RhbFJlcXVlc3RzIC0gMSkpICsgdXNhZ2VSZWNvcmQucmVzcG9uc2VUaW1lKSAvIGV4aXN0aW5nRGFpbHkudG90YWxSZXF1ZXN0cztcblxuICAgIGF3YWl0IGt2LnNldChkYWlseUtleSwgZXhpc3RpbmdEYWlseSwgeyBleDogNjAgKiA2MCAqIDI0ICogOTAgfSk7IC8vIEtlZXAgZGFpbHkgc3VtbWFyaWVzIGZvciA5MCBkYXlzXG5cbiAgICBjb25zb2xlLmxvZygnQW5hbHl0aWNzIHRyYWNrZWQ6JywgdXNhZ2VSZWNvcmQpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byB0cmFjayBhbmFseXRpY3M6JywgZXJyb3IpO1xuICB9XG59XG5cbi8vIE5vdGU6IENvc3QgY2FsY3VsYXRpb24gcmVtb3ZlZCAtIG5vdyB1c2luZyByZWFsIGNvc3RzIHByb3ZpZGVkIGRpcmVjdGx5IGJ5IEFJXG4vLyBJZiBBSSBkb2Vzbid0IHByb3ZpZGUgY29zdCBkYXRhLCB3ZSBzaG93IFwibm90IHByb3ZpZGVkXCIgaW4gYW5hbHl0aWNzXG5cbi8vIEdldCBhbmFseXRpY3MgZGF0YSBmb3IgZGFzaGJvYXJkXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QW5hbHl0aWNzKGRheXMgPSAzMCkge1xuICB0cnkge1xuICAgIGNvbnN0IGVuZERhdGUgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgc3RhcnREYXRlLnNldERhdGUoc3RhcnREYXRlLmdldERhdGUoKSAtIGRheXMpO1xuXG4gICAgLy8gR2V0IGRhaWx5IHN1bW1hcmllc1xuICAgIGNvbnN0IGRhaWx5RGF0YSA9IFtdO1xuICAgIGZvciAobGV0IGQgPSBuZXcgRGF0ZShzdGFydERhdGUpOyBkIDw9IGVuZERhdGU7IGQuc2V0RGF0ZShkLmdldERhdGUoKSArIDEpKSB7XG4gICAgICBjb25zdCBkYXRlU3RyID0gZC50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF07XG4gICAgICBjb25zdCBkYWlseUtleSA9IGBkYWlseToke2RhdGVTdHJ9YDtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBrdi5nZXQoZGFpbHlLZXkpO1xuICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgZGFpbHlEYXRhLnB1c2goZGF0YSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gR2V0IHJlY2VudCBpbmRpdmlkdWFsIHJlcXVlc3RzXG4gICAgY29uc3Qga2V5cyA9IGF3YWl0IGt2LmtleXMoJ2FuYWx5dGljczoqJyk7XG4gICAgY29uc3QgcmVjZW50S2V5cyA9IGtleXNcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBiLmxvY2FsZUNvbXBhcmUoYSkpXG4gICAgICAuc2xpY2UoMCwgMTAwKTsgLy8gR2V0IGxhc3QgMTAwIHJlcXVlc3RzXG5cbiAgICBjb25zdCByZWNlbnRSZXF1ZXN0cyA9IFtdO1xuICAgIGZvciAoY29uc3Qga2V5IG9mIHJlY2VudEtleXMpIHtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBrdi5nZXQoa2V5KTtcbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIHJlY2VudFJlcXVlc3RzLnB1c2goZGF0YSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQ2FsY3VsYXRlIHRvdGFsc1xuICAgIGNvbnN0IHRvdGFscyA9IGRhaWx5RGF0YS5yZWR1Y2UoKGFjYywgZGF5KSA9PiAoe1xuICAgICAgdG90YWxSZXF1ZXN0czogYWNjLnRvdGFsUmVxdWVzdHMgKyBkYXkudG90YWxSZXF1ZXN0cyxcbiAgICAgIHRvdGFsVG9rZW5zOiBhY2MudG90YWxUb2tlbnMgKyBkYXkudG90YWxUb2tlbnMsXG4gICAgICB0b3RhbENvc3Q6IGFjYy50b3RhbENvc3QgKyBkYXkudG90YWxDb3N0LFxuICAgICAgY2FjaGVkUmVxdWVzdHM6IGFjYy5jYWNoZWRSZXF1ZXN0cyArIGRheS5jYWNoZWRSZXF1ZXN0cyxcbiAgICAgIGVycm9yczogYWNjLmVycm9ycyArIGRheS5lcnJvcnNcbiAgICB9KSwge1xuICAgICAgdG90YWxSZXF1ZXN0czogMCxcbiAgICAgIHRvdGFsVG9rZW5zOiAwLFxuICAgICAgdG90YWxDb3N0OiAwLFxuICAgICAgY2FjaGVkUmVxdWVzdHM6IDAsXG4gICAgICBlcnJvcnM6IDBcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICBkYWlseURhdGEsXG4gICAgICByZWNlbnRSZXF1ZXN0cyxcbiAgICAgIHRvdGFscyxcbiAgICAgIHBlcmlvZDoge1xuICAgICAgICBzdGFydERhdGU6IHN0YXJ0RGF0ZS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF0sXG4gICAgICAgIGVuZERhdGU6IGVuZERhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdLFxuICAgICAgICBkYXlzXG4gICAgICB9XG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZ2V0IGFuYWx5dGljczonLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLy8gR2V0IHJlYWwtdGltZSBzdGF0cyAtIG5vdyB1c2VzIHRoZSBzYW1lIGRhdGEgc291cmNlIGFzIG1haW4gYW5hbHl0aWNzIGZvciBjb25zaXN0ZW5jeVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFJlYWxUaW1lU3RhdHMoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXTtcblxuICAgIGNvbnN0IGRlZmF1bHRTdGF0cyA9IHtcbiAgICAgIHRvdGFsUmVxdWVzdHM6IDAsXG4gICAgICB0b3RhbFRva2VuczogMCxcbiAgICAgIHRvdGFsQ29zdDogMCxcbiAgICAgIGNhY2hlZFJlcXVlc3RzOiAwLFxuICAgICAgZXJyb3JzOiAwLFxuICAgICAgYXZnUmVzcG9uc2VUaW1lOiAwXG4gICAgfTtcblxuICAgIGxldCB0b2RheVN0YXRzID0gZGVmYXVsdFN0YXRzO1xuXG4gICAgLy8gRmlyc3QsIHRyeSB0byBnZXQgdG9kYXkncyBkYXRhIGRpcmVjdGx5IGZyb20gZGFpbHkgc3VtbWFyeVxuICAgIGNvbnN0IGRhaWx5S2V5ID0gYGRhaWx5OiR7dG9kYXl9YDtcbiAgICBjb25zdCB0b2RheURhdGEgPSBhd2FpdCBrdi5nZXQoZGFpbHlLZXkpO1xuXG5cblxuICAgIGlmICh0b2RheURhdGEpIHtcbiAgICAgIHRvZGF5U3RhdHMgPSB0b2RheURhdGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIElmIG5vIGRhaWx5IHN1bW1hcnkgZXhpc3RzLCBjYWxjdWxhdGUgZnJvbSByZWNlbnQgcmVxdWVzdHNcbiAgICAgIGNvbnN0IGtleXMgPSBhd2FpdCBrdi5rZXlzKCdhbmFseXRpY3M6KicpO1xuICAgICAgY29uc3QgcmVjZW50S2V5cyA9IGtleXNcbiAgICAgICAgLnNvcnQoKGEsIGIpID0+IGIubG9jYWxlQ29tcGFyZShhKSlcbiAgICAgICAgLnNsaWNlKDAsIDEwMCk7IC8vIEdldCBsYXN0IDEwMCByZXF1ZXN0c1xuXG4gICAgICBjb25zdCByZWNlbnRSZXF1ZXN0cyA9IFtdO1xuICAgICAgZm9yIChjb25zdCBrZXkgb2YgcmVjZW50S2V5cykge1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQga3YuZ2V0KGtleSk7XG4gICAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgICAgcmVjZW50UmVxdWVzdHMucHVzaChkYXRhKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBDb3VudCByZXF1ZXN0cyBmcm9tIHRvZGF5XG4gICAgICBjb25zdCB0b2RheVJlcXVlc3RzID0gcmVjZW50UmVxdWVzdHMuZmlsdGVyKHJlcSA9PiB7XG4gICAgICAgIGNvbnN0IHJlcURhdGUgPSBuZXcgRGF0ZShyZXEudGltZXN0YW1wKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF07XG4gICAgICAgIHJldHVybiByZXFEYXRlID09PSB0b2RheTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAodG9kYXlSZXF1ZXN0cy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHRvZGF5U3RhdHMgPSB7XG4gICAgICAgICAgdG90YWxSZXF1ZXN0czogdG9kYXlSZXF1ZXN0cy5sZW5ndGgsXG4gICAgICAgICAgdG90YWxUb2tlbnM6IHRvZGF5UmVxdWVzdHMucmVkdWNlKChzdW0sIHJlcSkgPT4gc3VtICsgKHJlcS50b3RhbFRva2VucyB8fCAwKSwgMCksXG4gICAgICAgICAgdG90YWxDb3N0OiB0b2RheVJlcXVlc3RzLnJlZHVjZSgoc3VtLCByZXEpID0+IHN1bSArIChyZXEuY29zdCB8fCAwKSwgMCksXG4gICAgICAgICAgY2FjaGVkUmVxdWVzdHM6IHRvZGF5UmVxdWVzdHMuZmlsdGVyKHJlcSA9PiByZXEuY2FjaGVkKS5sZW5ndGgsXG4gICAgICAgICAgZXJyb3JzOiB0b2RheVJlcXVlc3RzLmZpbHRlcihyZXEgPT4gIXJlcS5zdWNjZXNzKS5sZW5ndGgsXG4gICAgICAgICAgYXZnUmVzcG9uc2VUaW1lOiB0b2RheVJlcXVlc3RzLmxlbmd0aCA+IDAgP1xuICAgICAgICAgICAgdG9kYXlSZXF1ZXN0cy5yZWR1Y2UoKHN1bSwgcmVxKSA9PiBzdW0gKyAocmVxLnJlc3BvbnNlVGltZSB8fCAwKSwgMCkgLyB0b2RheVJlcXVlc3RzLmxlbmd0aCA6IDBcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBDYWxjdWxhdGUgbGFzdCBob3VyIGFjdGl2aXR5IGZyb20gcmVjZW50IHJlcXVlc3RzXG4gICAgbGV0IGxhc3RIb3VyUmVxdWVzdHMgPSAwO1xuICAgIGNvbnN0IGtleXMgPSBhd2FpdCBrdi5rZXlzKCdhbmFseXRpY3M6KicpO1xuICAgIGNvbnN0IHJlY2VudEtleXMgPSBrZXlzXG4gICAgICAuc29ydCgoYSwgYikgPT4gYi5sb2NhbGVDb21wYXJlKGEpKVxuICAgICAgLnNsaWNlKDAsIDEwMCk7XG5cbiAgICBjb25zdCBvbmVIb3VyQWdvID0gbmV3IERhdGUoRGF0ZS5ub3coKSAtIDYwICogNjAgKiAxMDAwKS50b0lTT1N0cmluZygpO1xuICAgIGZvciAoY29uc3Qga2V5IG9mIHJlY2VudEtleXMpIHtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBrdi5nZXQoa2V5KTtcbiAgICAgIGlmIChkYXRhICYmIGRhdGEudGltZXN0YW1wID4gb25lSG91ckFnbykge1xuICAgICAgICBsYXN0SG91clJlcXVlc3RzKys7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRvZGF5OiB0b2RheVN0YXRzLFxuICAgICAgbGFzdEhvdXI6IGxhc3RIb3VyUmVxdWVzdHMsXG4gICAgICBjYWNoZUhpdFJhdGU6IHRvZGF5U3RhdHMudG90YWxSZXF1ZXN0cyA+IDAgP1xuICAgICAgICAodG9kYXlTdGF0cy5jYWNoZWRSZXF1ZXN0cyAvIHRvZGF5U3RhdHMudG90YWxSZXF1ZXN0cyAqIDEwMCkudG9GaXhlZCgxKSA6IDAsXG4gICAgICBlcnJvclJhdGU6IHRvZGF5U3RhdHMudG90YWxSZXF1ZXN0cyA+IDAgP1xuICAgICAgICAodG9kYXlTdGF0cy5lcnJvcnMgLyB0b2RheVN0YXRzLnRvdGFsUmVxdWVzdHMgKiAxMDApLnRvRml4ZWQoMSkgOiAwXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZ2V0IHJlYWwtdGltZSBzdGF0czonLCBlcnJvcik7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRvZGF5OiB7XG4gICAgICAgIHRvdGFsUmVxdWVzdHM6IDAsXG4gICAgICAgIHRvdGFsVG9rZW5zOiAwLFxuICAgICAgICB0b3RhbENvc3Q6IDAsXG4gICAgICAgIGNhY2hlZFJlcXVlc3RzOiAwLFxuICAgICAgICBlcnJvcnM6IDAsXG4gICAgICAgIGF2Z1Jlc3BvbnNlVGltZTogMFxuICAgICAgfSxcbiAgICAgIGxhc3RIb3VyOiAwLFxuICAgICAgY2FjaGVIaXRSYXRlOiAwLFxuICAgICAgZXJyb3JSYXRlOiAwXG4gICAgfTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImt2IiwidHJhY2tBcGlVc2FnZSIsImRhdGEiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJ1c2FnZVJlY29yZCIsInByb2plY3QiLCJtb2RlbCIsImlucHV0VG9rZW5zIiwib3V0cHV0VG9rZW5zIiwidG90YWxUb2tlbnMiLCJyZXNwb25zZVRpbWUiLCJjb3N0IiwicmVhbENvc3RVU0QiLCJjb3N0U291cmNlIiwiY2FjaGVkIiwic3VjY2VzcyIsImVycm9yIiwidXNlckFnZW50IiwiaXAiLCJzY2FuVHlwZSIsImtleSIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0ciIsInNldCIsImV4IiwidG9kYXkiLCJzcGxpdCIsImRhaWx5S2V5IiwiZXhpc3RpbmdEYWlseSIsImdldCIsImRhdGUiLCJ0b3RhbFJlcXVlc3RzIiwidG90YWxDb3N0IiwiY2FjaGVkUmVxdWVzdHMiLCJlcnJvcnMiLCJhdmdSZXNwb25zZVRpbWUiLCJiYXNpY1NjYW5zIiwiZnVsbFNjYW5zIiwiY29uc29sZSIsImxvZyIsImdldEFuYWx5dGljcyIsImRheXMiLCJlbmREYXRlIiwic3RhcnREYXRlIiwic2V0RGF0ZSIsImdldERhdGUiLCJkYWlseURhdGEiLCJkIiwiZGF0ZVN0ciIsInB1c2giLCJrZXlzIiwicmVjZW50S2V5cyIsInNvcnQiLCJhIiwiYiIsImxvY2FsZUNvbXBhcmUiLCJzbGljZSIsInJlY2VudFJlcXVlc3RzIiwidG90YWxzIiwicmVkdWNlIiwiYWNjIiwiZGF5IiwicGVyaW9kIiwiZ2V0UmVhbFRpbWVTdGF0cyIsImRlZmF1bHRTdGF0cyIsInRvZGF5U3RhdHMiLCJ0b2RheURhdGEiLCJ0b2RheVJlcXVlc3RzIiwiZmlsdGVyIiwicmVxIiwicmVxRGF0ZSIsImxlbmd0aCIsInN1bSIsImxhc3RIb3VyUmVxdWVzdHMiLCJvbmVIb3VyQWdvIiwibm93IiwibGFzdEhvdXIiLCJjYWNoZUhpdFJhdGUiLCJ0b0ZpeGVkIiwiZXJyb3JSYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/analytics.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@upstash","vendor-chunks/@vercel","vendor-chunks/uncrypto"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.js&appDir=%2Fhome%2Fabu%2FCascadeProjects%2Fscamapp%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fabu%2FCascadeProjects%2Fscamapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();